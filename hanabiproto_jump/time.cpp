/*==============================================================================

				   時間制限処理 [time.cpp]
				Author : 佐々木
				Date   : 2023/01/20(最終編集日)
------------------------------------------------------------------------------------------------------------------------------------------

==============================================================================*/
#include "main.h"
#include "renderer.h"
#include "BENRIclass.h"
#include "texture.h"
#include "sprite.h"
#include "time.h"
#include "main.h"
#include "input.h"
//*****************************************************************************							
// マクロ定義							
//*****************************************************************************							
//*****************************************************************************							
// プロトタイプ宣言							
//*****************************************************************************							

//*****************************************************************************							
// グローバル変数							
//*****************************************************************************	
static int g_Texture;

static TIME g_Time;

//=============================================================================							
// 初期化処理							
//=============================================================================							
HRESULT InitTime()
{
	g_Texture = LoadTexture((char*)"data/TEXTURE/timelimit.png");

	g_Time.time = 0;	//時間の初期設定
	g_Time.digit = 3;	//桁の初期設定
	g_Time.x = 980.0f;	//表示位置xの初期設定

	SetTime(TIME_LIMIT_MAX);//開始時間をセット

	return S_OK;
}

//=============================================================================							
// 終了処理							
//=============================================================================	
void UninitTime()
{
}

//=============================================================================							
// 更新処理							
//=============================================================================	
void UpdateTime()
{
	//テスト
	if (GetKeyboardTrigger(DIK_7))
	{
		TimePlus(10);
	}
	if (GetKeyboardTrigger(DIK_8))
	{
		TimeMinus(10);
	}

	//フレームを１足す
	g_Time.frame++;

	//時間が0になって１秒立つとリザルト
	if (g_Time.time <= 0)
	{
		if (g_Time.frame == 60)
		{
			SetScene(SCENE_GRESULT);
		}
	}

	//１秒で１減らす
	if (g_Time.frame == 60) {
		g_Time.time--;
		g_Time.frame = 0;
	}

	////桁と中心座標を合わせる
	//if (g_Time.time >= 1 && g_Time.time <= 10)
	//{
	//	g_Time.digit = 1;
	//	g_Time.x = 940.0f;
	//}
	//if (g_Time.time >= 10 && g_Time.time <= 100)
	//{
	//	g_Time.digit = 2;
	//	g_Time.x = 960.0f;
	//}
	//if (g_Time.time >= 100)
	//{
	//	g_Time.digit = 3;
	//	g_Time.x = 980.0f;
	//}
}

//=============================================================================							
// 描画処理							
//=============================================================================	
void DrawTime()
{
	int drawtime = g_Time.time;

	for (int i = 0; i < g_Time.digit; i++) {
		int num = drawtime % 10;
		DrawSpriteLeftTop(g_Texture,g_Time.x - (i * TIME_WIDTH), 290.0f, TIME_SIZE_X, TIME_SIZE_Y, 0.1f * num, 0.0f, 0.1f, 1.0f);
		drawtime /= 10;
	}
}

void SetTime(int time)
{
	g_Time.time = time;
}

void TimePlus(int plus)
{
	g_Time.time += plus;
}

void TimeMinus(int minus)
{
	g_Time.time -= minus;
}